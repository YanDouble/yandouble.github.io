<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Double&#39;s Blog</title>
  
  <subtitle>往事如烟，烟消云散</subtitle>
  <link href="https://yandouble.github.io/atom.xml" rel="self"/>
  
  <link href="https://yandouble.github.io/"/>
  <updated>2024-04-15T09:39:55.685Z</updated>
  <id>https://yandouble.github.io/</id>
  
  <author>
    <name>Yan Double</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SDN学习记录5</title>
    <link href="https://yandouble.github.io/SDN/SDN%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%955/"/>
    <id>https://yandouble.github.io/SDN/SDN%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%955/</id>
    <published>2024-01-13T10:40:20.000Z</published>
    <updated>2024-04-15T09:39:55.685Z</updated>
    
    <content type="html"><![CDATA[<h5 id="环境："><a href="#环境：" class="headerlink" title="环境："></a>环境：</h5><ul><li><p>Ubuntu22.04 </p></li><li><p>OpenDaylight0.13.4(aluminium)</p></li><li><p>Mininet2.3.0</p></li><li><p>Python3.10.12</p></li></ul><h5 id="安装Mininet"><a href="#安装Mininet" class="headerlink" title="安装Mininet"></a>安装Mininet</h5><p><code>sudo apt -y update</code></p><p><code>sudo apt -y install install mininet</code></p><p><code>sudo apt -y install python3 python3-pip</code></p><p><code>sudo pip3 install mininet</code></p><h5 id="为OpenDaylight安装Feature"><a href="#为OpenDaylight安装Feature" class="headerlink" title="为OpenDaylight安装Feature"></a>为OpenDaylight安装Feature</h5><p><code>bin/start</code></p><p><code>bin/client</code></p><p><code>feature:install odl-openflowplugin-flow-services-rest</code></p><p><code>feature:install odl-openflowplugin-app-topology-manager</code></p><p><code>feature:install odl-openflowplugin-app-forwardingrules-manager</code></p><p><code>feature:install odl-openflowplugin-app-topology-lldp-disovery</code></p><p><code>feature:install odl-openflowplugin-app-lldp-speaker</code></p><p><code>feature:install odl-openflowplugin-app-table-miss-enforcer</code></p><h5 id="启动Mininet"><a href="#启动Mininet" class="headerlink" title="启动Mininet"></a>启动Mininet</h5><p><code>sudo python3 test.py</code>或</p><p><code>sudo mn --custom test.py --topo simple --controller remote,ip=ip</code></p><h5 id="用户进行所需服务的身份认证"><a href="#用户进行所需服务的身份认证" class="headerlink" title="用户进行所需服务的身份认证"></a>用户进行所需服务的身份认证</h5><p><code>sh python3 authfunc.py</code>之后输入用户名密码和需要的服务即可，认证成功后即可成功访问服务</p><p>访问<code>http://&lt;controller_ip&gt;:8181/restconf/operational/opendaylight-inventory:nodes/node/openflow:&lt;switch&gt;/table/0/</code>即可查看下发给对应交换机的流表</p><p><code>curl -X DELETE -u admin:admin http://&lt;controller_ip&gt;:8181/restconf/config/opendaylight-inventory:nodes/</code>可以清除所有下发给交换机的流表规则</p><p><code>&lt;host&gt; ping &lt;service&gt;</code>可以检测用户是否能够成功访问目标服务</p><h5 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h5><p><code>wget https://inmon.com/products/sFlow-RT/sflow-rt.tar.gz</code></p><p><code>tar -xvzf sflow-rt.tar.gz</code></p><p><code>./sflow-rt/get-app.sh sflow-rt browse-metrics</code></p><p><code>./sflow-rt/get-app.sh sflow-rt browse-flows</code></p><p><code>./sflow-rt/start.sh</code></p><p>在启动mininet之后</p><p><code>sudo ovs-vsctl -- --id=@sflow create sFlow agent=&lt;switch&gt; target=\&quot;&lt;ip&gt;:6343\&quot; header=128 sampling=64 polling=1 -- set bridge &lt;switch&gt; sflow=@sflow</code>开启OvS的sFlow功能，并配置sFlow Agent</p><p><code>sudo ovs-vsctl list sflow</code>可以查看已经配置的信息</p><p>访问<code>http://localhost:8008/app/browse-metrics/html/index.html?metric=ovs_dp_flows</code>可以进行流量分析</p><p><code>sudo tcpdump -i &lt;switch-interface&gt;</code>可以分析交换机网络接口数据包信息</p>]]></content>
    
    
    <summary type="html">基于OpenFlow的网络服务组策略防护---操作指南</summary>
    
    
    
    <category term="SDN" scheme="https://yandouble.github.io/category/SDN/"/>
    
    
    <category term="Analyse" scheme="https://yandouble.github.io/tag/Analyse/"/>
    
  </entry>
  
  <entry>
    <title>SDN学习记录4</title>
    <link href="https://yandouble.github.io/SDN/SDN%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%954/"/>
    <id>https://yandouble.github.io/SDN/SDN%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%954/</id>
    <published>2024-01-13T09:25:28.000Z</published>
    <updated>2024-04-15T09:29:07.257Z</updated>
    
    <content type="html"><![CDATA[<h6 id="数据分析-从非实验环境的流量中完成数据收集和图像绘制"><a href="#数据分析-从非实验环境的流量中完成数据收集和图像绘制" class="headerlink" title="数据分析:从非实验环境的流量中完成数据收集和图像绘制"></a>数据分析:从非实验环境的流量中完成数据收集和图像绘制</h6><p>使用sflow-rt工具的browser-metric组件可以对流量进行图像绘制</p><ul><li>使用user1对printer进行ping操作</li></ul><p><img src="/image/article/SDN4/image-20240105233855540.png" alt="image-20240105233855540"></p><ul><li>使用user3对hardDisk进行ping操作(没有权限)</li></ul><p><img src="/image/article/SDN4/image-20240105233955658.png" alt="image-20240105233955658"></p><ul><li>sflow-rt工具绘制的流量图像，可以看到当user1请求使用printer服务时，因为他有该权限，因此所有交换机上的流表均正常工作，此时数据流正常通行，但是当user3没有权限访问hardDisk，因此只有在s3上的流表工作，过滤掉这个user3发出的数据包。</li></ul><p><img src="/image/article/SDN4/image-20240105234015100.png" alt="image-20240105234015100"></p><p><img src="/image/article/SDN4/image-20240106000127602.png" alt="image-20240106000127602"></p><p>使用tcpdump命令查看s2上通过的数据包，可以所有数据包成功通过</p><p><img src="/image/article/SDN4/image-20240106000429138.png" alt="image-20240106000429138"></p><p>再查看s3的情况，可以看到并没有数据包经s3流出</p><p><img src="/image/article/SDN4/image-20240106000533532.png" alt="image-20240106000533532"></p>]]></content>
    
    
    <summary type="html">基于OpenFlow的网络服务组策略防护---流量分析</summary>
    
    
    
    <category term="SDN" scheme="https://yandouble.github.io/category/SDN/"/>
    
    
    <category term="Analyse" scheme="https://yandouble.github.io/tag/Analyse/"/>
    
  </entry>
  
  <entry>
    <title>SDN学习记录3</title>
    <link href="https://yandouble.github.io/SDN/SDN%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%953/"/>
    <id>https://yandouble.github.io/SDN/SDN%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%953/</id>
    <published>2024-01-07T16:00:00.000Z</published>
    <updated>2024-04-15T09:28:37.844Z</updated>
    
    <content type="html"><![CDATA[<h6 id="根据目标流量正确生成目标规则，并成功下发实现了控制目标"><a href="#根据目标流量正确生成目标规则，并成功下发实现了控制目标" class="headerlink" title="根据目标流量正确生成目标规则，并成功下发实现了控制目标"></a>根据目标流量正确生成目标规则，并成功下发实现了控制目标</h6><p>连接到了数据库，对用户进行身份验证，并提供对应的服务，当用户请求服务的流量到达时，使用控制器向交换机下发对应的流表规则，使得流量能够顺利到达对应的服务，使该用户能够成功使用该服务</p><p>关键代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">getInformation</span>():</span><br><span class="line">    username = <span class="built_in">input</span>(<span class="string">&#x27;Please input your username:\n&#x27;</span>)</span><br><span class="line">    service = <span class="built_in">input</span>(<span class="string">&#x27;Please input your want to use service:\n&#x27;</span>)</span><br><span class="line">    password = getpass.getpass(<span class="string">&quot;Enter your password:\n&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> username, password, service</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">authenticate</span>(<span class="params">username, password,service</span>):</span><br><span class="line">    <span class="comment">#连接数据库并创建游标</span></span><br><span class="line">    conn = sqlite3.connect(<span class="string">&#x27;data.db&#x27;</span>)</span><br><span class="line">    cursor = conn.cursor()</span><br><span class="line">    cursor.execute(<span class="string">&quot;SELECT * FROM users WHERE username = ? and password = ?&quot;</span>,(username, password))</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> cursor.fetchall():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Username Or Password Error.&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">else</span> :</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Log In Successfully!&quot;</span>)</span><br><span class="line">    cursor.execute(<span class="string">&quot;SELECT * FROM rules WHERE user = ? and service = ?&quot;</span>,(username,service))</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> cursor.fetchall():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;You don&#x27;t have the <span class="subst">&#123;service&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">else</span> :</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Successfully! You can use the service.&quot;</span>)</span><br><span class="line">    <span class="comment"># 关闭数据库连接</span></span><br><span class="line">    conn.close()</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">send_flow_table</span>(<span class="params">username, password, service, mac, ip, switch, infer</span>):</span><br><span class="line">    switch_infer = &#123;<span class="string">&#x27;2&#x27;</span>: <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;3&#x27;</span>: <span class="string">&#x27;5&#x27;</span>&#125;</span><br><span class="line">    service_infer = &#123;<span class="string">&#x27;hardDisk&#x27;</span>: <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;printer&#x27;</span>: <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;secret&#x27;</span>: <span class="string">&#x27;3&#x27;</span>&#125;</span><br><span class="line">    service_mac = &#123;<span class="string">&#x27;hardDisk&#x27;</span>: <span class="string">&#x27;2a:b3:a3:0b:e1:46&#x27;</span>, <span class="string">&#x27;printer&#x27;</span>: <span class="string">&#x27;12:82:cc:55:c7:f0&#x27;</span>, <span class="string">&#x27;secret&#x27;</span>: <span class="string">&#x27;16:8b:5b:04:f4:39&#x27;</span>&#125;</span><br><span class="line">    <span class="keyword">if</span> authenticate(username, password, service):</span><br><span class="line">        <span class="comment"># request information</span></span><br><span class="line">        headers = &#123;<span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>&#125;</span><br><span class="line">        auth = (<span class="string">&quot;admin&quot;</span>, <span class="string">&quot;admin&quot;</span>) </span><br><span class="line">        </span><br><span class="line">        <span class="comment"># flow rule</span></span><br><span class="line">        stp_user_To_ip = &#123;</span><br><span class="line">            <span class="string">&quot;flow&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;id&quot;</span>: <span class="string">f&quot;stp-s<span class="subst">&#123;switch&#125;</span>-<span class="subst">&#123;infer&#125;</span>-1-<span class="subst">&#123;service&#125;</span>-ip-<span class="subst">&#123;username&#125;</span>&quot;</span>,</span><br><span class="line">            <span class="string">&quot;priority&quot;</span>: <span class="number">200</span>,</span><br><span class="line">            <span class="string">&quot;table_id&quot;</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="string">&quot;match&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;ethernet-match&quot;</span>: &#123;<span class="string">&quot;ethernet-type&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="number">2048</span>&#125;, <span class="string">&quot;ethernet-source&quot;</span>: &#123;<span class="string">&quot;address&quot;</span>: <span class="string">f&quot;<span class="subst">&#123;mac&#125;</span>&quot;</span>&#125;&#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&quot;instructions&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;instruction&quot;</span>: [&#123;</span><br><span class="line">                <span class="string">&quot;order&quot;</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="string">&quot;apply-actions&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;action&quot;</span>: [&#123;</span><br><span class="line">                    <span class="string">&quot;order&quot;</span>: <span class="number">0</span>,</span><br><span class="line">                    <span class="string">&quot;output-action&quot;</span>: &#123; <span class="string">&quot;output-node-connector&quot;</span>: <span class="string">f&quot;openflow:<span class="subst">&#123;switch&#125;</span>:1&quot;</span> &#125;</span><br><span class="line">                    &#125;]</span><br><span class="line">                &#125;</span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        json_stp_user_To_ip = json.dumps(stp_user_To_ip)</span><br><span class="line">        url_stp_user_To_ip = <span class="string">f&quot;http://localhost:8181/restconf/config/opendaylight-inventory:nodes/node/openflow:<span class="subst">&#123;switch&#125;</span>/table/0/flow/stp-s<span class="subst">&#123;switch&#125;</span>-<span class="subst">&#123;infer&#125;</span>-1-<span class="subst">&#123;service&#125;</span>-ip-<span class="subst">&#123;username&#125;</span>&quot;</span></span><br><span class="line">        response_stp_user_To_ip = requests.put(url_stp_user_To_ip, headers=headers, auth=auth, data=json_stp_user_To_ip)</span><br><span class="line">        <span class="built_in">print</span>(response_stp_user_To_ip)</span><br></pre></td></tr></table></figure><p>其他流表的下发与给出部分类似</p><hr><p>当user1进行身份验证后，其能成功使用printer服务</p><p><img src="/image/article/SDN3/image-20240105160824235.png" alt="image-20240105160824235"></p><p>而未经身份验证的user2，则不能使用该服务</p><p><img src="/image/article/SDN3/image-20240105160932529.png" alt="image-20240105160932529"></p>]]></content>
    
    
    <summary type="html">基于OpenFlow的网络服务组策略防护---项目开发3</summary>
    
    
    
    <category term="SDN" scheme="https://yandouble.github.io/category/SDN/"/>
    
    
    <category term="Programe" scheme="https://yandouble.github.io/tag/Programe/"/>
    
  </entry>
  
  <entry>
    <title>SDN学习记录2</title>
    <link href="https://yandouble.github.io/SDN/SDN%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%952/"/>
    <id>https://yandouble.github.io/SDN/SDN%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%952/</id>
    <published>2024-01-04T16:00:00.000Z</published>
    <updated>2024-04-15T09:28:35.025Z</updated>
    
    <content type="html"><![CDATA[<h6 id="完成流表规则通过控制器正确下发到目标设备的工作"><a href="#完成流表规则通过控制器正确下发到目标设备的工作" class="headerlink" title="完成流表规则通过控制器正确下发到目标设备的工作"></a>完成流表规则通过控制器正确下发到目标设备的工作</h6><p>将在上一步计算的流表规则使用OpenDaylight的RESTapi下发到交换机，同时发现缺少了处理服务返回的数据包的流表规则，重新更新了需要的流表规则</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># request information</span></span><br><span class="line">headers = &#123;<span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>&#125;</span><br><span class="line">auth = (<span class="string">&quot;admin&quot;</span>, <span class="string">&quot;admin&quot;</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment"># flow rule</span></span><br><span class="line">stp_user_To_ip = &#123;</span><br><span class="line">    <span class="string">&quot;flow&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="string">f&quot;stp-s<span class="subst">&#123;switch&#125;</span>-<span class="subst">&#123;infer&#125;</span>-1-<span class="subst">&#123;service&#125;</span>-ip-<span class="subst">&#123;username&#125;</span>&quot;</span>,</span><br><span class="line">    <span class="string">&quot;priority&quot;</span>: <span class="number">200</span>,</span><br><span class="line">    <span class="string">&quot;table_id&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;match&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;ethernet-match&quot;</span>: &#123;<span class="string">&quot;ethernet-type&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="number">2048</span>&#125;, <span class="string">&quot;ethernet-source&quot;</span>: &#123;<span class="string">&quot;address&quot;</span>: <span class="string">f&quot;<span class="subst">&#123;mac&#125;</span>&quot;</span>&#125;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;instructions&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;instruction&quot;</span>: [&#123;</span><br><span class="line">        <span class="string">&quot;order&quot;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">&quot;apply-actions&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;action&quot;</span>: [&#123;</span><br><span class="line">            <span class="string">&quot;order&quot;</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="string">&quot;output-action&quot;</span>: &#123; <span class="string">&quot;output-node-connector&quot;</span>: <span class="string">f&quot;openflow:<span class="subst">&#123;switch&#125;</span>:1&quot;</span> &#125;</span><br><span class="line">            &#125;]</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">json_stp_user_To_ip = json.dumps(stp_user_To_ip)</span><br><span class="line">url_stp_user_To_ip = <span class="string">f&quot;http://localhost:8181/restconf/config/opendaylight-inventory:nodes/node/openflow:<span class="subst">&#123;switch&#125;</span>/table/0/flow/stp-s<span class="subst">&#123;switch&#125;</span>-<span class="subst">&#123;infer&#125;</span>-1-<span class="subst">&#123;service&#125;</span>-ip-<span class="subst">&#123;username&#125;</span>&quot;</span></span><br><span class="line">response_stp_user_To_ip = requests.put(url_stp_user_To_ip, headers=headers, auth=auth, data=json_stp_user_To_ip)</span><br><span class="line"><span class="built_in">print</span>(response_stp_user_To_ip)</span><br></pre></td></tr></table></figure><p>其他流表规则的下发与上述代码类似</p><h5 id="添加的返回流量的流表规则："><a href="#添加的返回流量的流表规则：" class="headerlink" title="添加的返回流量的流表规则："></a>添加的返回流量的流表规则：</h5><ul><li><h5 id="交换机S1"><a href="#交换机S1" class="headerlink" title="交换机S1:"></a>交换机S1:</h5></li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;flow&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> f<span class="string">&quot;stp-s1-&#123;service_infer[service]&#125;-&#123;switch_infer[switch]&#125;-&#123;service&#125;-ip-&#123;username&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;priority&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;table_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;in-port&quot;</span><span class="punctuation">:</span> f<span class="string">&quot;openflow:1:&#123;service_infer[service]&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;ethernet-match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;ethernet-type&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">2048</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;instructions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;instruction&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;apply-actions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;action&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;output-action&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;output-node-connector&quot;</span><span class="punctuation">:</span> f<span class="string">&quot;openflow:1:&#123;switch_infer[switch]&#125;&quot;</span> <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;flow&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> f<span class="string">&quot;stp-s1-&#123;service_infer[service]&#125;-&#123;switch_infer[switch]&#125;-&#123;service&#125;-mac-&#123;username&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;priority&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;table_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;in-port&quot;</span><span class="punctuation">:</span> f<span class="string">&quot;openflow:1:&#123;service_infer[service]&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;ethernet-match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;ethernet-type&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">2054</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;instructions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;instruction&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;apply-actions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;action&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;output-action&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;output-node-connector&quot;</span><span class="punctuation">:</span> f<span class="string">&quot;openflow:1:&#123;switch_infer[switch]&#125;&quot;</span> <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span>  </span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ul><li><h5 id="交换机S2-S3："><a href="#交换机S2-S3：" class="headerlink" title="交换机S2&#x2F;S3："></a>交换机S2&#x2F;S3：</h5></li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;flow&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> f<span class="string">&quot;stp-s&#123;switch&#125;-1-&#123;infer&#125;-&#123;service&#125;-ip-&#123;username&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;priority&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;table_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;in-port&quot;</span><span class="punctuation">:</span> f<span class="string">&quot;openflow:&#123;switch&#125;:1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;ethernet-match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;ethernet-type&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">2048</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;ethernet-destination&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> f<span class="string">&quot;&#123;mac&#125;&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;instructions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;instruction&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;apply-actions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;action&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;output-action&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;output-node-connector&quot;</span><span class="punctuation">:</span> f<span class="string">&quot;openflow:&#123;switch&#125;:&#123;infer&#125;&quot;</span> <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;flow&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> f<span class="string">&quot;stp-s&#123;switch&#125;-1-&#123;infer&#125;-&#123;service&#125;-mac-&#123;username&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;priority&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;table_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;in-port&quot;</span><span class="punctuation">:</span> f<span class="string">&quot;openflow:&#123;switch&#125;:1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;ethernet-match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;ethernet-type&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">2054</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="attr">&quot;ethernet-destination&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> f<span class="string">&quot;&#123;mac&#125;&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;instructions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;instruction&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;apply-actions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;action&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;output-action&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;output-node-connector&quot;</span><span class="punctuation">:</span> f<span class="string">&quot;openflow:&#123;switch&#125;:&#123;infer&#125;&quot;</span> <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><hr><p>登陆成功后结果如下：</p><p><img src="/image/article/SDN2/image-20240105160125527.png" alt="image-20240105160125527"></p><p>查询opendaylight，也能看到对应规则已经添加到了交换机中：</p><p><img src="/image/article/SDN2/image-20240105160405660.png" alt="image-20240105160405660"></p>]]></content>
    
    
    <summary type="html">基于OpenFlow的网络服务组策略防护---项目开发2</summary>
    
    
    
    <category term="SDN" scheme="https://yandouble.github.io/category/SDN/"/>
    
    
    <category term="Programe" scheme="https://yandouble.github.io/tag/Programe/"/>
    
  </entry>
  
  <entry>
    <title>SDN学习记录1</title>
    <link href="https://yandouble.github.io/SDN/SDN%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%951/"/>
    <id>https://yandouble.github.io/SDN/SDN%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%951/</id>
    <published>2024-01-04T09:12:16.000Z</published>
    <updated>2024-04-15T09:28:25.679Z</updated>
    
    <content type="html"><![CDATA[<h6 id="根据模拟输入的结果计算出对应的流表规则"><a href="#根据模拟输入的结果计算出对应的流表规则" class="headerlink" title="根据模拟输入的结果计算出对应的流表规则"></a>根据模拟输入的结果计算出对应的流表规则</h6><p>模拟输入流量的形式为：带有请求服务信息以及MAC、IP地址的数据包</p><p>据此得出需要下发到各个交换机的流表规则</p><h5 id="交换机S1："><a href="#交换机S1：" class="headerlink" title="交换机S1："></a>交换机S1：</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;flow&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;stp-s1-4-2-printer-ip&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;priority&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;table_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;in-port&quot;</span><span class="punctuation">:</span> <span class="string">&quot;openflow:1:4&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;ethernet-match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;ethernet-type&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">2048</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;ipv4-source&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10.0.0.4/8&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;instructions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;instruction&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;apply-actions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;action&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;output-action&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;output-node-connector&quot;</span><span class="punctuation">:</span> <span class="string">&quot;openflow:1:2&quot;</span> <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;flow&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> f<span class="string">&quot;stp-s1-4-2-printer-mac&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;priority&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;table_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;in-port&quot;</span><span class="punctuation">:</span> <span class="string">&quot;openflow:1:4&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;ethernet-match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;ethernet-type&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">2054</span><span class="punctuation">&#125;</span><span class="punctuation">,</span>  <span class="attr">&quot;ethernet-source&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;00:00:00:00:00:04&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;instructions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;instruction&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;apply-actions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;action&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;output-action&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;output-node-connector&quot;</span><span class="punctuation">:</span> <span class="string">&quot;openflow:1:2&quot;</span> <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span>    </span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="交换机S2-S3"><a href="#交换机S2-S3" class="headerlink" title="交换机S2&#x2F;S3:"></a>交换机S2&#x2F;S3:</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;flow&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> f<span class="string">&quot;stp-s2-3-1-printer-ip&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;priority&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;table_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;ethernet-match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;ethernet-type&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">2048</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> </span><br><span class="line">  <span class="attr">&quot;ethernet-source&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;00:00:00:00:00:04&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;ipv4-source&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10.0.0.4/8&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;instructions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;instruction&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;apply-actions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;action&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;output-action&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;output-node-connector&quot;</span><span class="punctuation">:</span> <span class="string">&quot;openflow:2:1&quot;</span> <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;flow&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> f<span class="string">&quot;stp-s2-3-1-printer-mac&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;priority&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;table_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;ethernet-match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;ethernet-type&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">2054</span><span class="punctuation">&#125;</span><span class="punctuation">,</span>  <span class="attr">&quot;ethernet-source&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;00:00:00:00:00:04&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;instructions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;instruction&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;apply-actions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;action&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;output-action&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;output-node-connector&quot;</span><span class="punctuation">:</span> f<span class="string">&quot;openflow:2:1&quot;</span> <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>交换机通过检查特定IP、MAC地址决定如何处理数据包</p>]]></content>
    
    
    <summary type="html">基于OpenFlow的网络服务组策略防护---项目开发1</summary>
    
    
    
    <category term="SDN" scheme="https://yandouble.github.io/category/SDN/"/>
    
    
    <category term="Programe" scheme="https://yandouble.github.io/tag/Programe/"/>
    
  </entry>
  
  <entry>
    <title>汇编及恶意代码常见技术</title>
    <link href="https://yandouble.github.io/Study/%E6%B1%87%E7%BC%96%E5%8F%8A%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%B8%B8%E8%A7%81%E6%8A%80%E6%9C%AF/"/>
    <id>https://yandouble.github.io/Study/%E6%B1%87%E7%BC%96%E5%8F%8A%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%B8%B8%E8%A7%81%E6%8A%80%E6%9C%AF/</id>
    <published>2023-10-15T03:03:12.000Z</published>
    <updated>2024-04-15T09:35:52.637Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-对抗反汇编"><a href="#1-对抗反汇编" class="headerlink" title="1.对抗反汇编"></a>1.对抗反汇编</h4><h5 id="分析下述代码实际在做什么？"><a href="#分析下述代码实际在做什么？" class="headerlink" title="分析下述代码实际在做什么？"></a>分析下述代码实际在做什么？</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">74 03    jz    short near ptr loc_4011C4+1</span><br><span class="line">75 01    jnz   short near ptr loc_4011C4+1</span><br><span class="line">loc_4011C4:</span><br><span class="line">E8 58 C3 90 90   call   near ptr 90D0D531h</span><br></pre></td></tr></table></figure><ol><li><p><code>jz short near ptr loc_4011C4+1</code>：条件跳转指令，如果Zero标志位（ZF）被设置（通常表示最近的操作结果为零），则跳转到<code>loc_4011C4</code>标签处执行下一条指令。</p></li><li><p><code>jnz short near ptr loc_4011C4+1</code>：条件跳转指令，如果Zero标志位未被设置（通常表示最近的操作结果不为零），则跳转到<code>loc_4011C4</code>标签处执行下一条指令。</p></li><li><p><code>loc_4011C4:</code>：标签，表示代码块的开始。</p></li><li><p><code>E8 58 C3 90 90</code>：<code>call</code>指令，它调用位于地址<code>90D0D531h</code>的函数。<code>E8</code>表示<code>call</code>指令，<code>58 C3 90 90</code>是调用的偏移地址。这个地址是相对于<code>call</code>指令下一条指令的偏移。</p></li></ol><p>这段代码首先进行一个条件判断，然后无论条件如何，都会跳转到 <code>loc_4011C4</code> 处执行下一条指令，即 <code>call</code> 指令。最后，通过 <code>call</code> 指令调用一个地址为 <code>90D0D531h</code> 的函数。</p><h4 id="2-反调试"><a href="#2-反调试" class="headerlink" title="2.反调试"></a>2.反调试</h4><h5 id="请列举出至少三个恶意代码中常见的用于反调试的API函数，并阐述原理。"><a href="#请列举出至少三个恶意代码中常见的用于反调试的API函数，并阐述原理。" class="headerlink" title="请列举出至少三个恶意代码中常见的用于反调试的API函数，并阐述原理。"></a>请列举出至少三个恶意代码中常见的用于反调试的API函数，并阐述原理。</h5><ol><li><strong>IsDebuggerPresent:</strong><ul><li><strong>API函数：</strong> <code>IsDebuggerPresent</code></li><li><strong>原理：</strong> <code>IsDebuggerPresent</code> 函数用于检测当前进程是否正在被调试，它会查询进程环境块（PEB）中的IdDebugged标志，如果进程正在被调试，返回一个非零值；否则，返回 0。恶意代码通常会调用这个函数，如果检测到正在被调试，可能会采取相应的措施，例如修改代码行为或提前退出。</li></ul></li><li><strong>CheckRemoteDebuggerPresent:</strong><ul><li><strong>API函数：</strong> <code>CheckRemoteDebuggerPresent</code></li><li><strong>原理：</strong> 同<code>IsDebuggerPresent</code>函数几乎一致，它用来检测本机器中的一个进程是否运行在调试器中。同时，它也检查PEB结构中的IsDebugged属性。它不仅可以探测进程自身是否被调试，同时可以探测系统其他进程是否被调试。这个函数将一个进程句柄作为参数，检查这个句柄对应的进程是否被调试器附加，同时，<code>CheckRemoteDebuggerPresent</code>也可以通过传递自身进程句柄探测自己是否被调试。如果发现有远程调试器存在，它可能会采取一些反调试的措施。</li></ul></li><li><strong>NtQueryInformationProcess:</strong><ul><li><strong>API函数：</strong> <code>NtQueryInformationProcess</code></li><li><strong>原理：</strong> <code>NtQueryInformationProcess</code> 函数用于获取有关进程的信息。它是Ntdll.dll中一个API，其第一个参数是进程句柄，第二个参数告诉我们它需要提取进程信息的类型。为第二个参数指定特定值并调用该函数，相关信息就会设置到第三个参数。第二个参数是一个枚举类型，其中与反调试有关的成员有<code>ProcessDebugPort(0x7)</code>、<code>ProcessDebugObjectHandle(0x1E)</code>和<code>ProcessDebugFlags(0x1F)</code>。例如将该参数置为<code>ProcessDebugPort</code>，如果进程正在被调试，则返回调试端口，否则返回0。</li></ul></li></ol><h4 id="3-反虚拟机"><a href="#3-反虚拟机" class="headerlink" title="3. 反虚拟机"></a>3. 反虚拟机</h4><h5 id="请列举出至少两种通用的反虚拟机技术（对VMware，VirtualBox等常见虚拟机软件都有效）。"><a href="#请列举出至少两种通用的反虚拟机技术（对VMware，VirtualBox等常见虚拟机软件都有效）。" class="headerlink" title="请列举出至少两种通用的反虚拟机技术（对VMware，VirtualBox等常见虚拟机软件都有效）。"></a>请列举出至少两种通用的反虚拟机技术（对VMware，VirtualBox等常见虚拟机软件都有效）。</h5><ol><li><strong>检测虚拟机痕迹:</strong><ul><li>根据当前进程信息<ul><li>通过进程快照读取当前进程信息，查找是否存在虚拟机中特有的进程，如VMware中的vmware.exe和VirtualBox中的VBoxService.exe。</li></ul></li><li>根据特定的文件夹或文件信息<ul><li>通过查找磁盘中是否存在特定的文件夹或文件，判断当前是否在虚拟机中。VMware虚拟机中通常会有路径C:\Program Files\VMware\VMware Tools\；VirtualBox 虚拟机中通常会有路径 C:\Program  Files\Oracle\VirtualBox Guest Additions\。</li></ul></li><li>根据特定注册表信息<ul><li>通过读取主机具有虚拟机特性的注册表位置来判断是否处于虚拟机环境中。针对VMware可以判断注册表项HKEY_CLASSES_ROOT\Applications\VMwareHostOpen.exe；针对VirtualBox可以判断注册表项HKEY_LOCAL_MACHINE\SOFTWARE\Oracle\VirtualBox<br>Guest Additions。</li></ul></li><li>根据特定服务名<ul><li>通过获取主机当前具有VMware特性的服务信息，判断当前主机是否为虚拟机。在VMware中通常会存在VMware物理磁盘助手服务和VMware Tools服务等；在VirtualBox中通常会存在VirtualBox Guest Additions Service服务等。</li></ul></li></ul></li><li><strong>Red Pill反虚拟机技术:</strong><ul><li>利用中断描述符表IDT基址检测虚拟机</li><li><strong>原理：</strong> 由于只存在一个IDTR，但又存在两个操作系统，即虚拟机系统和真实主机系统。为了防止冲突，虚拟机监控器必须更改虚拟机中的IDT地址，利用真主机与虚拟机环境中执行的sidt指令的差异即可用于检测虚拟机是否存在</li></ul></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;1-对抗反汇编&quot;&gt;&lt;a href=&quot;#1-对抗反汇编&quot; class=&quot;headerlink&quot; title=&quot;1.对抗反汇编&quot;&gt;&lt;/a&gt;1.对抗反汇编&lt;/h4&gt;&lt;h5 id=&quot;分析下述代码实际在做什么？&quot;&gt;&lt;a href=&quot;#分析下述代码实际在做什么？&quot; class</summary>
      
    
    
    
    <category term="Study" scheme="https://yandouble.github.io/category/Study/"/>
    
    
    <category term="汇编 | 恶意代码" scheme="https://yandouble.github.io/tag/%E6%B1%87%E7%BC%96-%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>网安靶场学习记录</title>
    <link href="https://yandouble.github.io/Study/%E7%BD%91%E5%AE%89%E9%9D%B6%E5%9C%BA%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>https://yandouble.github.io/Study/%E7%BD%91%E5%AE%89%E9%9D%B6%E5%9C%BA%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</id>
    <published>2023-06-11T16:48:09.000Z</published>
    <updated>2024-04-15T09:36:53.494Z</updated>
    
    <content type="html"><![CDATA[<p>部署网站</p>]]></content>
    
    
    <summary type="html">crAPI靶场记录</summary>
    
    
    
    <category term="Study" scheme="https://yandouble.github.io/category/Study/"/>
    
    
    <category term="crAPI" scheme="https://yandouble.github.io/tag/crAPI/"/>
    
  </entry>
  
  <entry>
    <title>Testpost</title>
    <link href="https://yandouble.github.io/Test/Testpost/"/>
    <id>https://yandouble.github.io/Test/Testpost/</id>
    <published>2023-05-26T16:00:00.000Z</published>
    <updated>2024-04-15T09:34:33.311Z</updated>
    
    <content type="html"><![CDATA[<p>It is just a test.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;It is just a test.&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Test" scheme="https://yandouble.github.io/category/Test/"/>
    
    
    <category term="Test" scheme="https://yandouble.github.io/tag/Test/"/>
    
  </entry>
  
  <entry>
    <title>LiveForCode</title>
    <link href="https://yandouble.github.io/Web/LiveForCode/"/>
    <id>https://yandouble.github.io/Web/LiveForCode/</id>
    <published>2023-03-29T16:00:00.000Z</published>
    <updated>2024-04-04T17:13:56.001Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://hexo.io/zh-cn/">Hexo</a> 是高效的静态站点生成框架，他基于 <a href="https://nodejs.org/en/">Node.js</a>。通过 Hexo 你可以轻松地使用 <a href="https://daringfireball.net/projects/markdown/">Markdown</a> 编写文章，除了 Markdown 本身的语法之外，还可以使用 Hexo 提供的 <a href="https://hexo.io/zh-cn/docs/tag-plugins.html">标签插件</a> 来快速的插入特定形式的内容。在这篇文章中，假定你已经成功安装了 Hexo，并使用 Hexo 提供的命令创建了一个站点。  </p><blockquote><p>你可以访问 <a href="https://hexo.io/zh-cn/docs/">Hexo 的文档</a> 了解如何安装 Hexo  </p></blockquote><p>在 Hexo 中有两份主要的配置文件，其名称都是 <code>_config.yml</code>。其中，一份位于 Hexo 根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。<br>为了描述方便，在以下说明中，将前者称为 <strong>站点配置文件</strong> ， 后者称为 <strong>主题配置文件</strong> 。  </p><h2 id="主题预览"><a href="#主题预览" class="headerlink" title="主题预览"></a>主题预览</h2><p><a href="https://www.notes.worstone.cn/">Hexo - Live For Code</a>  </p><h2 id="安装Live-For-Code"><a href="#安装Live-For-Code" class="headerlink" title="安装Live For Code"></a>安装Live For Code</h2><p>Hexo 安装主题的方式非常简单，只需要将主题文件拷贝至 Hexo 根目录的 themes 目录下，然后修改下配置文件即可。具体到 LiveForCode 来说，安装步骤如下。  </p><h3 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h3><p>如果你熟悉 Git，建议你使用 <code>克隆最新版本</code> 的方式，之后的更新可以通过 <code>git pull</code> 来快速更新，而不用再次下载压缩包替换。  </p><ol><li><p>克隆最新版本<br>在终端窗口下，定位到 Hexo 站点目录下。使用 Git Checkout 代码：  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd your-hexo-site</span><br><span class="line">git clone https://github.com/first19326/hexo-liveforcode</span><br></pre></td></tr></table></figure><p>将克隆下来的文件夹中的 <code>LiveForCode</code> 文件夹移动至站点的 <code>themes</code> 目录下，并将 <code>source</code> 文件夹中的 <code>about</code>、<code>category</code>、<code>comment</code>、<code>donate</code>、<code>friend</code> 以及 <code>tag</code> 文件夹移动至 Hexo 站点目录下的 <code>source</code> 文件夹中。这些文件夹分别对应着 <strong>关于</strong> 、 <strong>标签</strong> 、 <strong>留言板</strong> 、 <strong>赞赏</strong> 、 <strong>友情链接</strong> 以及 <strong>分类</strong> 页面，其中的 <code>index.md</code> 中的内容为各个页面显示的内容，大家可以根据自己的情况进行修改。  </p></li><li><p>下载稳定版本<br>前往 LiveForCode 版本发布页面。<br>选择你所需要的版本，下载 Download 区域下的 Source Code (zip) 到本地。<br>解压所下载的压缩包，并将解压后的文件夹中的 <code>LiveForCode</code> 文件夹移动至站点的 <code>themes</code> 目录下，并将 <code>source</code> 文件夹中的 <code>about</code>、<code>category</code>、<code>comment</code>、<code>donate</code>、<code>friend</code> 以及 <code>tag</code> 文件夹移动至 Hexo 站点目录下的 <code>source</code> 文件夹中。这些文件夹分别对应着 <strong>关于</strong> 、 <strong>标签</strong> 、 <strong>留言板</strong> 、 <strong>赞赏</strong> 、 <strong>友情链接</strong> 以及 <strong>分类</strong> 页面，其中的 <code>index.md</code> 中的内容为各个页面显示的内容，大家可以根据自己的情况进行修改。</p></li></ol><h3 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h3><p>与所有 Hexo 主题启用的模式一样。当 克隆&#x2F;下载 完成后，打开 <strong>站点配置文件</strong> ，找到 theme 字段，并将其值更改为 <code>LiveForCode</code>。  </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">LiveForCode</span></span><br></pre></td></tr></table></figure><p>到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前，我们最好使用 <code>hexo clean</code> 来清除 Hexo 的缓存。  </p><h3 id="验证主题"><a href="#验证主题" class="headerlink" title="验证主题"></a>验证主题</h3><p>首先启动 Hexo 本地站点，并开启调试模式（即加上 –debug），整个命令是 <code>hexo s --debug</code>。 在服务启动的过程，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误。<br>当命令行输出中提示出： <code>INFO  Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</code> 此时即可使用浏览器访问 <code>http://localhost:4000</code>，检查站点是否正确运行。  </p><h2 id="站点设定"><a href="#站点设定" class="headerlink" title="站点设定"></a>站点设定</h2><p>在 <strong>站点配置文件</strong> 中，我修改了标签归档页面、分类归档页面以及文章归档页面的路径，如果大家使用默认的路径，则需要修改 <strong>主题配置文件</strong> 中的菜单设置。  </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tag_dir:</span> <span class="string">tag</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archive</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">category</span></span><br></pre></td></tr></table></figure><h2 id="主题设定"><a href="#主题设定" class="headerlink" title="主题设定"></a>主题设定</h2><p>由于 <strong>主题配置文件</strong> 可能有所改动，就不在这里给大家详细说明，我会在 <strong>主题配置文件</strong> 中添加适当的注释，麻烦大家参考页面以及注释内容进行修改。  </p><h2 id="第三方服务"><a href="#第三方服务" class="headerlink" title="第三方服务"></a>第三方服务</h2><h3 id="Abbrlink"><a href="#Abbrlink" class="headerlink" title="Abbrlink"></a>Abbrlink</h3><p>Hexo 默认的文章链接是以时间和文件名称命名的，如果文件名称是中文，那么文章链接会被转译，而转义后的链接很长，并且也不美观。<a href="https://github.com/rozbo/hexo-abbrlink">Hexo-Abbrlink</a> 插件基于文章的标题自动为文章生成固定的链接。</p><p>1.安装 Hexo-Abbrlink 插件。前往站点根目录，执行命令安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><p>2.编辑 <strong>站点配置文件</strong>，修改以下配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink/</span> </span><br><span class="line"><span class="comment"># or</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink.html</span></span><br></pre></td></tr></table></figure><p>3.编辑 <strong>站点配置文件</strong>，新增以下配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># abbrlink config</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span>      <span class="comment">#support crc16(default) and crc32</span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">dec</span>        <span class="comment">#support dec(default) and hex</span></span><br></pre></td></tr></table></figure><p>Hexo-Abbrlink 插件主要的设置选项：</p><ul><li><p>算法（alg）：目前支持 <code>crc16</code> 和 <code>crc32</code> 算法，默认值为 <code>crc16</code>。</p></li><li><p>形式（rep）：生成的链接可以是十进制（<code>dec</code>）格式，也可以是十六进制（<code>hex</code>）格式，默认值为十进制（<code>dec</code>）格式。</p></li></ul><p>生成的链接地址（参考）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">crc16 &amp; hex</span><br><span class="line">https://notes.worstone.cn/article/66c8.html</span><br><span class="line"></span><br><span class="line">crc16 &amp; dec</span><br><span class="line">https://notes.worstone.cn/article/65535.html</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">crc32 &amp; hex</span><br><span class="line">https://notes.worstone.cn/article/8ddf18fb.html</span><br><span class="line"></span><br><span class="line">crc32 &amp; dec</span><br><span class="line">https://notes.worstone.cn/article/1690090958.html</span><br></pre></td></tr></table></figure><h3 id="Algolia-Search"><a href="#Algolia-Search" class="headerlink" title="Algolia Search"></a>Algolia Search</h3><p>1.前往 <a href="https://www.algolia.com/">Algolia</a> 注册页面，注册一个新账户。 可以使用 GitHub 或者 Google 账户直接登录，注册后的 14 天内拥有所有功能（包括收费类别的）。之后若未续费会自动降级为免费账户，免费账户总共有 10,000 条记录，每月有 100,000 的可以操作数。注册完成后，创建一个新的 Index，这个 Index 将在后面使用。<br>2.Index 创建完成后，此时这个 Index 里未包含任何数据。 接下来需要安装 <code>Hexo Algolia</code> 扩展，这个扩展的功能是搜集站点的内容并通过 API 发送给 Algolia。前往站点根目录，执行命令安装：  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-algolia</span><br></pre></td></tr></table></figure><p>3.编辑 <strong>站点配置文件</strong> ，新增以下配置：  </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">algolia:</span></span><br><span class="line">  <span class="attr">applicationID:</span> <span class="string">&#x27;applicationID&#x27;</span></span><br><span class="line">  <span class="attr">apiKey:</span> <span class="string">&#x27;apiKey&#x27;</span></span><br><span class="line">  <span class="attr">indexName:</span> <span class="string">&#x27;...&#x27;</span></span><br></pre></td></tr></table></figure><p>注：这里的 <strong>apiKey</strong> 为 <code>Search-Only API Key</code><br>4.当配置完成，在站点根目录下执行一下命令更新 Index。请注意观察命令的输出。  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export HEXO_ALGOLIA_INDEXING_KEY=Admin API Key</span><br><span class="line">hexo algolia</span><br></pre></td></tr></table></figure><p>5.Hexo Algolia 命令设置选项  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Options:</span><br><span class="line">  --dry-run       Does not push content to Algolia (default: false).</span><br><span class="line">  --flush         Resets the Algolia index before starting the indexation (default: false).</span><br><span class="line">  --indexing-key  An algolia API key with add/delete records permissions.</span><br><span class="line">              It should be different than the search-only API key configured in _config.yml.</span><br><span class="line">  --layouts       A comma-separated list of page layouts to index (default: &quot;page&quot;).</span><br></pre></td></tr></table></figure><p>说明：<br><code>--flush</code> 如果是 <code>false</code> 则每一次都会直接添加内容到 Algolia 相关的 Index 中，如果不是第一次提交，则将其设置为 <code>true</code><br><code>--layouts</code> 如果使用默认设置，提交的时候会将分类归档、标签归档、赞赏、留言板等页面内容提交到 Algolia， 在搜索的时候，将会搜索到分类归档、标签归档、赞赏、留言板等页面内容，建议使用时将其设置为 <code>post</code>。  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo algolia --flush true --layouts post</span><br></pre></td></tr></table></figure><h3 id="Vercel"><a href="#Vercel" class="headerlink" title="Vercel"></a>Vercel</h3><p><a href="https://vercel.com/">Vercel</a> 是一个开箱即用的网站托管平台，方便开发者快速部署自己的网站。它在全球都拥有 CDN 节点，因此比 Github 官方自带的 Github Pages 更加稳定，访问速度更快。</p><h4 id="Vercel-部署方式"><a href="#Vercel-部署方式" class="headerlink" title="Vercel 部署方式"></a>Vercel 部署方式</h4><p>进入到 Vercel 官网后，可以选择使用 Github 进行授权登录。Vercel 部署有两种方式（<strong>推荐第一种方式</strong>）：</p><p>1.利用 Vercel 的 Hexo 模板进行部署。</p><blockquote><p>特别说明 使用这种方式需要已经安装 Hexo。<font color="red">不需要</font> 进行 Hexo 初始化，即 <code>hexo init</code> 。</p></blockquote><p>选择 <strong>Clone Template</strong>，点击下方的 <strong>Browse All Templates</strong>，然后找到 <strong>Hexo</strong> 模版。</p><p><img src="/image/article/1112885395/template.png" alt="template"></p><p>选择模板后，进入到创建仓库界面，设置好仓库名称，然后点击 <strong>Create</strong> 即可。至于是否设置成私有仓库，根据个人意愿选择，目前 Github 的私有仓库是 <strong>免费</strong> 的。</p><p><img src="/image/article/1112885395/repository.png" alt="repository"></p><p>等待 Vercel 部署完成，跳转到部署成功的页面。点击 <strong>Go to Dashboard</strong> 即可查看刚刚的项目。</p><p><img src="/image/article/1112885395/congratulations.png" alt="congratulations"></p><p>部署好的模板项目是 Hexo 默认的主题，需要将 Github 对应的项目下载到本地进行修改。项目想要在本地进行运行，需要<strong>安装相关依赖</strong>，通过<code>npm install</code> 或 <code>cnpm install</code> 或<code>yarn install</code>皆可进行安装。依赖安装完成后，即可进行主题安装等相关操作。</p><p>2.通过 GitHub 托管 <code>hexo deploy</code> 生成的网页文件进行部署。</p><p>创建新的项目，选择 <strong>Import Git Repository</strong>，然后选择 Hexo 网站对应的仓库，点击 <strong>Import</strong>。</p><p><img src="/image/article/1112885395/import.png" alt="import"></p><p>跳转到 <strong>Configure Project</strong> 页面，项目名称可以自行修改，其他的自定义选项，<strong>建议不要修改</strong>，除非有什么特殊需求。</p><p><img src="/image/article/1112885395/configure.png" alt="configure"></p><p>点击 <strong>Deploy</strong>，然后等待部署完成即可。部署完成后，Vercel 会提供几个默认的域名，可以在对应项目中查看。</p><h4 id="Vercel-自定义域名"><a href="#Vercel-自定义域名" class="headerlink" title="Vercel 自定义域名"></a>Vercel 自定义域名</h4><p>进入到 Vercel 的 <strong>Dashboard</strong>，然后点击对应项目，然后点击 <strong>View Domains</strong>，进入到项目的 <strong>Domains</strong> 界面，在这里可以进行域名管理。如果想要使用 Vercel 提供的二级域名，可以直接添加 <code>xxx.vercel.app</code>；如果想要绑定自己的域名，在添加域名后，会提示 <strong>Invalid Config</strong>，需要添加 DNS 解析。</p><h4 id="Vercel-DNS-解析"><a href="#Vercel-DNS-解析" class="headerlink" title="Vercel DNS 解析"></a>Vercel DNS 解析</h4><p>1.如果是根域名，请在你的 DNS 解析处添加 <strong>A 记录</strong>，指向 <code>76.76.21.21</code>。</p><p>2.如果是子域名，请在你的 DNS 解析处添加 <strong>CNAME 记录</strong>，指向 <code>cname.vercel-dns.com</code>。</p><p>添加 DNS 解析记录之后，在 <strong>Vercel Domains</strong> 界面对应域名下方显示对号即表明验证成功。</p><p><img src="/image/article/1112885395/invalid.png" alt="invalid"></p><blockquote><p>特别说明 Github 仓库的分支尽量选择 <strong>master</strong>，否则 Github 推送之后，还需到 Vercel 手动部署项目。</p></blockquote><h3 id="设置-RSS"><a href="#设置-RSS" class="headerlink" title="设置 RSS"></a>设置 RSS</h3><p>1.安装 <code>Hexo-Feed</code> 插件。前往站点根目录，执行命令安装：  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-generator-feed</span><br></pre></td></tr></table></figure><p>2.根据个人需求，编辑 <strong>站点配置文件</strong> ：  </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><h3 id="文章数据统计"><a href="#文章数据统计" class="headerlink" title="文章数据统计"></a>文章数据统计</h3><h4 id="基于-Valine-js-实现方式"><a href="#基于-Valine-js-实现方式" class="headerlink" title="基于 Valine.js 实现方式"></a>基于 <code>Valine.js</code> 实现方式</h4><p>在文章列表页面加载 <code>Valine.js</code>， 只要 Valine 配置项中的 <code>el</code> 元素不存在即不会加载评论框相关内容。</p><p>1.文章评论数统计<br>Valine 会自动查找页面中 class 值为 <code>valine-comment-count</code> 的元素，获取其 <code>data-xid</code> 为查询条件。并将得到的值填充到其 class 的值为 <code>valine-comment-count</code> 的元素里：  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- data-xid 将作为查询条件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;valine-comment-count&quot;</span> <span class="attr">data-xid</span>=<span class="string">&quot;&lt;Your/Path/Name&gt;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.文章阅读量统计<br>Valine 从 <code>v1.2.0</code> 开始支持文章阅读量统计。  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Valine</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#vcomments&#x27;</span>,</span><br><span class="line">    ...</span><br><span class="line">    <span class="attr">visitor</span>: <span class="literal">true</span> <span class="comment">// 阅读量统计</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>如果开启了阅读量统计，Valine 会自动检测 LeanCloud 应用中是否存在 <code>Counter</code> 类，如果不存在会自动创建，无需手动创建。<br>Valine 会自动查找页面中 class 值为 <code>leancloud_visitors</code> 的元素，获取其 <code>id</code> 为查询条件。并将得到的值填充到其 class 的值为 <code>leancloud-visitors-count</code> 的子元素里：  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- id 将作为查询条件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;&lt;Your/Path/Name&gt;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;leancloud_visitors&quot;</span> <span class="attr">data-flag-title</span>=<span class="string">&quot;Your Article Title&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;leancloud-visitors-count&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>特别说明 使用 <strong>国际版的 LeanCloud</strong> 的时候，需要配置 <strong>主题配置文件</strong> 中 Valine 的 <code>serverURLs</code>，内容为 LeanCloud 的 <code>Request Domain</code>，国内版则需要 <strong>域名备案</strong>。</p></blockquote><h4 id="基于-Waline-js-实现方式"><a href="#基于-Waline-js-实现方式" class="headerlink" title="基于 Waline.js 实现方式"></a>基于 <code>Waline.js</code> 实现方式</h4><p>1.文章评论数统计</p><p>详情请参见 <a href="https://waline.js.org/guide/features/comment.html">Waline 文档-评论数统计</a></p><p>2.文章阅读量统计</p><p>详情请参见 <a href="https://waline.js.org/guide/features/pageview.html">Waline 文档-浏览量统计</a></p><h3 id="评论列表"><a href="#评论列表" class="headerlink" title="评论列表"></a>评论列表</h3><p>评论功能可以选择 <code>Valine.js</code> 或 <code>Waline.js</code>，配置详情参见 <a href="https://valine.js.org/">Valine</a>、<a href="https://waline.js.org/">Waline</a> 。</p><blockquote><p>特别说明 <strong>主题配置文件</strong> 中评论的数据存储如果使用 LeanCloud，则 <code>appId</code> 与 <code>appKey</code> 请大家自行配置自己的参数。另外，由于 LeanCloud <strong>不再提供默认域名</strong>，<strong>国内版本需要域名备案</strong>，否则无法使用。</p></blockquote><h3 id="赞赏页面"><a href="#赞赏页面" class="headerlink" title="赞赏页面"></a>赞赏页面</h3><p>赞赏页面使用了 <a href="https://github.com/Kaiyuan/sponsor-page">Sponsor Page</a>，并做了相关修改使其适应博客样式。感兴趣的小伙伴自行去了解吧。  </p><h3 id="音乐播放器"><a href="#音乐播放器" class="headerlink" title="音乐播放器"></a>音乐播放器</h3><p>音乐播放器功能是使用 <code>APlayer.js</code> 以及 <code>Meting.js</code> 实现，配置详情参见 <a href="https://aplayer.js.org/#/home">APlayer</a>、<a href="https://github.com/metowolf/MetingJS">Meting</a>。<br>主题中有两种实现方式，一种是 <code>APlayer.js</code> 结合 <code>Meting.js</code> 的实现方式，另外一种是 <code>APlayer.js</code> 单独的实现方式，两种实现方式各有优缺点：<br>第一种实现方式配置简单，并且可以从各个音乐平台解析音乐。由于是从各个平台解析，故而不是特别稳定，并且在 <code>IE</code> 浏览器中需要特殊设置。<br>第二种实现方式配置相对复杂，需要单独提供音乐相关信息，但是十分稳定，且对于 <code>IE</code> 浏览器也可兼容，无需特殊配置。<br>主题中默认以 <strong>第一种实现方式</strong> 实现，第二种实现方式为备选方案，在第一种实现方式出现问题的时候，可以切换到第二种实现方式，保证网站的稳定运行。<br>针对第二种实现方式需要 <strong>注意</strong> 的地方：<br><code>APlayer.js</code> 是基于 <code>HTML 5 Audio</code> 实现的一款音乐播放器插件，故而支持的音频格式有限，包括：<code>MP3</code>、<code>Wav</code> 以及 <code>Ogg</code> 格式，并且不同浏览器对这三种音频格式的支持也各有不同，详细信息大家参考 <a href="https://www.runoob.com/html/html5-audio.html">HTML5 Audio(音频)</a>。如果音频格式不支持，可以通过音频转换工具进行格式转换。<br><code>APlayer.js</code> 是通过 <code>XMLHttpRequest</code> 获取歌词文件，所以存在 <strong>跨域</strong> 问题。可以考虑将歌词文件放在主题文件夹 <code>LiveForCode</code> 的 <code>source</code> 文件夹下（ <strong>注意</strong> ：这里的 <code>source</code> 文件夹不是 <code>Hexo</code> 站点目录下的 <code>source</code> 文件夹），解决跨域的问题。由于 <code>jsDelivr</code> 在响应请求的时候，会添加 <code>access-control-allow-origin: *</code> 的响应标头信息，故而不存在跨域问题，也可以使用这种方式。不过需要注意的是，<code>jsDelivr</code> 对资源的大小有所限制，不可以超过 <strong>50M</strong> 。<br><code>APlayer.js</code> 获取到歌词后会将歌词中的空白行去掉，由于是单行显示歌词，所以有译文的双行歌词，只会显示下面一行歌词，可以将译文歌词拼接在歌词原文的后面解决这个问题。  </p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="关于-jQuery-版本"><a href="#关于-jQuery-版本" class="headerlink" title="关于 jQuery 版本"></a>关于 jQuery 版本</h3><p>mCustomScroll 目前暂不支持 <code>jQuery3.5</code> 以及以上版本，否则会导致代码块中的滚动条失效。  </p><h3 id="Position-fixed-定位问题"><a href="#Position-fixed-定位问题" class="headerlink" title="Position: fixed 定位问题"></a>Position: fixed 定位问题</h3><p>由于背景动画的 <code>z-index</code> 为 <code>-1</code>，导致在IE浏览器中，菜单等多处 <code>position: fixed</code> 样式的部件出现闪烁抖动的问题，所以默认在IE浏览器中关闭了背景动画。如果是高版本IE，例如IE11则可在设置 -&gt; Internet选项 -&gt; 高级，将浏览中的’使用平滑滚动’选项勾掉，也可以解决这个问题。  </p><h3 id="关于-Github-Page-的使用"><a href="#关于-Github-Page-的使用" class="headerlink" title="关于 Github Page 的使用"></a>关于 Github Page 的使用</h3><p>详情请参见 <a href="https://hexo.io/zh-cn/docs/github-pages">将 Hexo 部署到 GitHub Pages</a>。<br>Github Page 支持设置自己的域名，建议在 Hexo 主题的 source 文件夹下新增一个 CNAME 的文件，将自己的域名配置进去，否则每次提交的时候会覆盖掉相关域名设置。<br>在域名的解析设置中，可以使用 CNAME 解析方式，也可以使用 A 记录 的方式。如果是 A 记录 的方式，则需要检索当前 Github Page 对应的服务器 IP 地址。  </p><h3 id="关于-CDN"><a href="#关于-CDN" class="headerlink" title="关于 CDN"></a>关于 CDN</h3><p>CDN 可以在阿里云购买相关的 CDN 服务器，效果肯定是更好，这里使用的是 <a href="https://www.jsdelivr.com/">jsDelivr</a> 免费的 CDN 加速服务。但是有一个弊端，如果修改代码的时候没有 Github 的相关版本信息，则很容易读取到 jsDelivr 的缓存数据，而不是修改后的最新代码。至于这个缓存时间，我也拿捏不准。不过免费而且效果不错的东西，大家就不要要求太多了。 </p><h3 id="关于-Valine"><a href="#关于-Valine" class="headerlink" title="关于 Valine"></a>关于 Valine</h3><p>由于很多小伙伴直接使用主题中 Valine 的 <code>appId</code> 以及 <code>appKey</code>，而且 Valine 默认设置的 <code>path</code> 为 <code>window.location.pathname</code>，会导致大家的留言板数据出现异常。所以这里还是建议大家设置自己的 LeanCloud，<strong>推荐使用国际版</strong> ，后续如果想要添加邮件提醒，这样会方便很多。</p><h3 id="关于-Waline"><a href="#关于-Waline" class="headerlink" title="关于 Waline"></a>关于 Waline</h3><p>Valine 评论功能简单，不支持评论管理以及通知功能，虽说可以通过 <a href="https://github.com/DesertsP/Valine-Admin">Valine-Admin</a> 实现评论管理以及通知等功能，但非常麻烦。其他的评论系统有些需要服务器，例如 Artalk。所以选择集成了 Waline，通过在 Vercel 部署以达到无需服务器的目的。如果考虑到 <strong>访问速度</strong> 的问题，可以选择部署在 <strong>华为云</strong> 的 Serverless 上，每个月都有免费的资源。</p><h3 id="关于-Vercel"><a href="#关于-Vercel" class="headerlink" title="关于 Vercel"></a>关于 Vercel</h3><p>Github Pages 内容部署的服务器在美国，可能会导致国内部分地区加载速度较慢，大家可以将项目部署到 <strong>Vercel</strong> ，来提高网站的访问速度，同时也 <strong>方便百度对站点内容进行收录</strong> 。如果 <strong>网站域名已经备案</strong> ，则可以考虑 <strong>国内的阿里云或腾讯云的相关产品</strong> ，效果会更好。<br>目前 Vercel 提供的默认 <code>.app</code> 域名由于 <strong>DNS 污染</strong> 国内无法访问，<strong>需要添加自己的域名（无需备案）</strong>。</p><h3 id="Cannot-read-property-‘LongCang’-of-undefined"><a href="#Cannot-read-property-‘LongCang’-of-undefined" class="headerlink" title="Cannot read property ‘LongCang’ of undefined"></a>Cannot read property ‘LongCang’ of undefined</h3><p>这个问题比较常见，是主题文件路径不正确导致的。因为很多小伙伴都询问这个问题，所以在这里进行一个说明。    </p><p><img src="/image/article/1112885395/structure.png" alt="Hexo-LiveForCode"></p><p>直接从 Github 下载 <code>Zip</code> 格式的文件解压后或 Github <code>Clone</code> 后的文件结构应该如上图所示。这里需要注意，是将解压后文件夹中的 <code>LiveForCode</code> 文件夹复制到 <code>Hexo</code> 的 <code>themes</code> 文件夹下，而不是将解压后的 <code>Hexo-LiveForCode</code> 复制到 <code>themes</code> 文件夹下。</p><h3 id="标签、分类、归档等页面-404-或-Cannot-GET"><a href="#标签、分类、归档等页面-404-或-Cannot-GET" class="headerlink" title="标签、分类、归档等页面 404 或 Cannot GET"></a>标签、分类、归档等页面 <code>404</code> 或 <code>Cannot GET</code></h3><p>由于 <code>Hexo</code> 的标签、分类、归档等页面的目录修改为了 <code>tag</code>、<code>category</code>、<code>archive</code>，故使用默认的 <strong>站点配置文件</strong> 会出现这个问题。需要将 <strong>站点配置文件</strong> 中的 <code>Directory</code> 相关配置修改为：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tag_dir:</span> <span class="string">tag</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archive</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">category</span></span><br></pre></td></tr></table></figure><h2 id="阶段计划"><a href="#阶段计划" class="headerlink" title="阶段计划"></a>阶段计划</h2><ul><li>添加本地搜索</li><li>加入服务状态页面</li><li>添加 <code>即刻短文</code> 功能</li><li>标签外挂（Tag Plugins）</li><li>卡片式风格（文章列表）</li><li>图片懒加载</li><li>使用变量统一样式文件</li><li>添加 Hexo-Admin</li><li>使用 Vue.js 重构项目</li><li>加入 Pjax，优化页面加载速度</li><li>补充国际化支持语言</li><li>重新编写部署教程，添加视频教程</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>由于我还是一名小白，可能还有很多问题无法解决，这个主题也可能存在很多不尽如人意的地方，在细节方面我也会尽力地去修改，也欢迎大家提出自己的问题，以及主题的相关建议，也欢迎大家提交代码。如果觉得这个主题不错，欢迎大家去使用。当然了，如果能赞赏我一下，我也是不介意的。(●ˇ∀ˇ●)  </p><p>这个主题可定制的地方目前可能比较少，欢迎大家修改，也希望这个主题能够越来越好看，也希望越来越多的人能够喜欢。  </p>]]></content>
    
    
    <summary type="html">LiveForCode介绍.</summary>
    
    
    
    <category term="Web" scheme="https://yandouble.github.io/category/Web/"/>
    
    
    <category term="Blog" scheme="https://yandouble.github.io/tag/Blog/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://yandouble.github.io/uncategorized/Hello-World/"/>
    <id>https://yandouble.github.io/uncategorized/Hello-World/</id>
    <published>2023-03-29T08:28:49.000Z</published>
    <updated>2024-04-15T09:30:30.989Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">Hello World</summary>
    
    
    
    
  </entry>
  
</feed>
